/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InitScripts: function() { return /* binding */ InitScripts; }
/* harmony export */ });
/* harmony import */ var _carbonCanvas_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var _carbonCanvas_canvasLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _optimizator_optimizator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);
/* harmony import */ var _neonsLight_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);
/* harmony import */ var _swipers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7);
/* harmony import */ var _module_checkbox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8);
/* harmony import */ var _roadAnimation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9);
/* harmony import */ var _module_input_price__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(10);
/* harmony import */ var _module_mapLocation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(12);
/* harmony import */ var _module_form__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(13);
/* harmony import */ var _module_selector__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(14);
/* harmony import */ var _module_BasicSelector__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(15);
/* harmony import */ var _filters_FilterInventory__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(17);
/* harmony import */ var _module_PopupSwitch__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(19);
/* harmony import */ var _module_sign_registration__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(20);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }















var InitScripts = /*#__PURE__*/function () {
  function InitScripts(pageId) {
    _classCallCheck(this, InitScripts);
    _defineProperty(this, "pageId", void 0);
    if (pageId !== null) this.pageId = pageId;
  }
  _createClass(InitScripts, [{
    key: "init",
    value: function init() {
      switch (this.pageId) {
        case "main-page":
          //init scripts
          return this.initMainPage();
          break;
        case "inventory-page":
          return this.initInvertoryPage();
          break;
        case "product-page":
          return this.initProductPage();
          break;
        case "about-page":
          return this.initAboutPage();
          break;
        case "sign_page":
          return this.signIN();
          break;
      }
    }
  }, {
    key: "signIN",
    value: function signIN() {
      new _module_form__WEBPACK_IMPORTED_MODULE_9__.InitForm();
      document.querySelectorAll("[data-switch-to]").forEach(function (el) {
        el.addEventListener("click", function (e) {
          var getSwitcher = document.querySelector(e.target.getAttribute("data-switch-to"));
          var getContainer = e.target.closest(".mainContents");
          var titleContainer = document.querySelector("#TitleMain");
          //clearform
          getContainer.querySelectorAll("form").forEach(function (form) {
            form.style.opacity = 0;
            var dataType = getSwitcher.getAttribute("data-type");
            titleContainer.classList.add("animationChangeTitle");
            setTimeout(function () {
              console.log(dataType);
              if (dataType === "login") {
                titleContainer.querySelector("p").innerText = "Dealer Zone";
                titleContainer.querySelector("p").style.color = "#88E892";
                titleContainer.querySelector(".line").style.background = "#9CFFA6";
                titleContainer.querySelector(".line").style.boxShadow = "0px 0px 37px 12px rgba(82,255,99,0.8)";
              } else {
                titleContainer.querySelector("p").innerText = "Seller registration";
                titleContainer.querySelector("p").style.color = "#E6E888";
                titleContainer.querySelector(".line").style.background = "#FFE5A3";
                titleContainer.querySelector(".line").style.boxShadow = "0px 0px 37px 12px rgba(255, 208, 90, 0.80)";
              }
              setTimeout(function () {
                titleContainer.classList.remove("animationChangeTitle");
              }, 500);
            }, 150);
            setTimeout(function () {
              form.style.display = "none";
              getSwitcher.style.display = "block";
              getSwitcher.style.opacity = "1";
            }, 300);
          });
        });
      });
      new _module_sign_registration__WEBPACK_IMPORTED_MODULE_14__.Sign_registration();
    }
  }, {
    key: "initAboutPage",
    value: function initAboutPage() {
      var initNeonLight = new _neonsLight_index__WEBPACK_IMPORTED_MODULE_3__.NeonsLight(document.querySelectorAll(".initlight"), [document.getElementById("mainLightLeft"), document.getElementById("mainLightRight")]);
      var argument = [{
        type: "lightAnim",
        add: "disabledTurnOff",
        container: initNeonLight.lights_export,
        action: initNeonLight.controller_light,
        mainLight: initNeonLight.mainLight,
        add_light: initNeonLight.add_light
      }];
      _swipers__WEBPACK_IMPORTED_MODULE_4__.Swipers.initAutoSwiper();
      return new _optimizator_optimizator__WEBPACK_IMPORTED_MODULE_2__.Optimizator(argument);
    }
  }, {
    key: "initProductPage",
    value: function initProductPage() {
      var initNeonLight = new _neonsLight_index__WEBPACK_IMPORTED_MODULE_3__.NeonsLight(document.querySelectorAll(".initlight"), [document.getElementById("mainLightLeft"), document.getElementById("mainLightRight")]);
      var argument = [{
        type: "lightAnim",
        add: "disabledTurnOff"
      }];
      _swipers__WEBPACK_IMPORTED_MODULE_4__.Swipers.initProductSwiper();
      new _module_form__WEBPACK_IMPORTED_MODULE_9__.InitForm();
      new _module_selector__WEBPACK_IMPORTED_MODULE_10__.initSelectors(document.querySelectorAll(".initSelector"));
      new _module_PopupSwitch__WEBPACK_IMPORTED_MODULE_13__.SwitchFormPopup();
      if (document.querySelector(".contactAutolodge")) {
        document.querySelector(".contactAutolodge").querySelector(".btn-close").addEventListener("click", function (e) {
          document.querySelector(".contactAutolodge").querySelector(".btn-ui-close").click();
        });
      }

      //init clip board

      if (document.querySelectorAll(".initCopyBord")) {
        document.querySelectorAll(".initCopyBord").forEach(function (el) {
          el.addEventListener("click", function (e) {
            var target = e.target;
            var getContainer = target.closest(".view");
            var getData = getContainer.getAttribute("data-number");
            var textarea = document.createElement('textarea');
            textarea.value = getData;
            textarea.style.opacity = 0;
            textarea.style.position = "absolute";
            document.body.appendChild(textarea);
            textarea.select();
            document.execCommand('copy');
            document.body.removeChild(textarea);
          });
        });
      }
      return new _optimizator_optimizator__WEBPACK_IMPORTED_MODULE_2__.Optimizator(argument);
    }
  }, {
    key: "initInvertoryPage",
    value: function initInvertoryPage() {
      var initNeonLight = new _neonsLight_index__WEBPACK_IMPORTED_MODULE_3__.NeonsLight(document.querySelectorAll(".initlight"), [document.getElementById("mainLightLeft"), document.getElementById("mainLightRight")]);
      var argument = [{
        type: "lightAnim",
        add: "disabledTurnOff",
        container: initNeonLight.lights_export,
        action: initNeonLight.controller_light,
        mainLight: initNeonLight.mainLight,
        add_light: initNeonLight.add_light
      }, {
        type: "LockFilter",
        container: document.querySelector(".main_content"),
        content: document.querySelector("#filter_container")
      }];
      new _module_BasicSelector__WEBPACK_IMPORTED_MODULE_11__.BasicSelector();
      new _filters_FilterInventory__WEBPACK_IMPORTED_MODULE_12__.FilterInventory();
      new _module_form__WEBPACK_IMPORTED_MODULE_9__.InitForm();
      new _module_selector__WEBPACK_IMPORTED_MODULE_10__.initSelectors(document.querySelectorAll(".initSelector"));
      return new _optimizator_optimizator__WEBPACK_IMPORTED_MODULE_2__.Optimizator(argument);
    }
  }, {
    key: "initMainPage",
    value: function initMainPage() {
      var width = document.querySelector(".home__section").offsetWidth;
      var height = document.querySelector(".home__section").offsetHeight;
      var initBG_canvas = new _carbonCanvas_index__WEBPACK_IMPORTED_MODULE_0__.CarboneCanvas(document.getElementById("carbone_container"), width, height);
      var argument = {
        canvas: document.getElementById("canvasLineCarbone"),
        width: document.getElementById("carbone_container").width,
        height: document.getElementById("carbone_container").height
      };
      var initCanvasBgLine = new _carbonCanvas_canvasLine__WEBPACK_IMPORTED_MODULE_1__.CanvasLine(document.getElementById("carbone_container"), argument);
      var initNeonLight = new _neonsLight_index__WEBPACK_IMPORTED_MODULE_3__.NeonsLight(document.querySelectorAll(".initlight"), [document.getElementById("mainLightLeft"), document.getElementById("mainLightRight")]);
      var initRoadCar = new _roadAnimation__WEBPACK_IMPORTED_MODULE_6__.RoadAnimation(document.getElementById("canvasAnimationRoad"), document.querySelector(".registration__section"));
      argument = {
        id: initNeonLight.mainLight,
        action: initNeonLight.controller_light
      };
      _swipers__WEBPACK_IMPORTED_MODULE_4__.Swipers.initMainSwiper(document.getElementById("mainSwiper"), argument);
      _swipers__WEBPACK_IMPORTED_MODULE_4__.Swipers.initReviwsSwiper(document.getElementById("swiper_reviews_main"), {
        left: document.getElementById("swiper_left_review"),
        right: document.getElementById("swiper_right_review")
      });
      /*newCarSwiperInit*/
      _swipers__WEBPACK_IMPORTED_MODULE_4__.Swipers.initNewCarSwiper(document.getElementById("swiper_newCar"));
      var initInputsDom = document.querySelectorAll(".initInputPrice");
      var initInputs = new _module_input_price__WEBPACK_IMPORTED_MODULE_7__.InputPrice(initInputsDom);

      //init checkboxs
      new _module_checkbox__WEBPACK_IMPORTED_MODULE_5__.checkbox();
      new _module_mapLocation__WEBPACK_IMPORTED_MODULE_8__.MapLocation();
      new _module_form__WEBPACK_IMPORTED_MODULE_9__.InitForm();
      new _module_selector__WEBPACK_IMPORTED_MODULE_10__.initSelectors(document.querySelectorAll(".initSelector"));
      argument = [{
        type: "carboneAnimation",
        container: initBG_canvas.containerId,
        id: initBG_canvas.animationStatus,
        reset: initBG_canvas.resetAnimation
      }, {
        type: "carboneLine",
        container: initBG_canvas.containerId,
        action: initCanvasBgLine.controller
      }, {
        type: "lightAnim",
        add: "none",
        container: initNeonLight.lights_export,
        action: initNeonLight.controller_light,
        mainLight: initNeonLight.mainLight,
        add_light: initNeonLight.add_light
      }
      // {
      //     type: "animationCar",
      //     container: document.querySelector(".registration__section"),
      //     action: initRoadCar.getAndCalcData,
      // }
      ];

      return new _optimizator_optimizator__WEBPACK_IMPORTED_MODULE_2__.Optimizator(argument);
    }
  }]);
  return InitScripts;
}();

/***/ }),
/* 2 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CarboneCanvas: function() { return /* binding */ CarboneCanvas; }
/* harmony export */ });
/* harmony import */ var _module_random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var CarboneCanvas = /*#__PURE__*/function () {
  function CarboneCanvas(containerId, width, height) {
    var _this = this;
    _classCallCheck(this, CarboneCanvas);
    _defineProperty(this, "containerId", void 0);
    _defineProperty(this, "carbonImage", void 0);
    _defineProperty(this, "listsElements", []);
    _defineProperty(this, "animationStatus", {
      id: 0,
      status: false
    });
    _defineProperty(this, "animationArray", []);
    _defineProperty(this, "resetAnimation", function () {
      console.log("reset");
      _this.doAnimationCarbon();
    });
    _defineProperty(this, "doAnimationCarbon", function () {
      _this.animationStatus.id = setInterval(function () {
        var allImages = _toConsumableArray(document.querySelectorAll('#carbone_container .wrapper img'));
        var getRandomImages = function getRandomImages(images, count) {
          var shuffled = _toConsumableArray(images).sort(function () {
            return 0.5 - Math.random();
          });
          return shuffled.slice(0, count);
        };
        var rndImg = getRandomImages(allImages, 5);
        rndImg.forEach(function (img) {
          var getRnd_brightness = _module_random__WEBPACK_IMPORTED_MODULE_0__.randomIze.getRandomFloat(0.5, 1.5);
          img.style.filter = "brightness(".concat(getRnd_brightness, ")");
        });
      }, 3000);
      _this.animationStatus.status = true;
    });
    if (!containerId) return;
    this.containerId = containerId;
    this.initCarbon(width, height);
  }
  _createClass(CarboneCanvas, [{
    key: "initCarbon",
    value: function initCarbon(width, height) {
      var _this2 = this;
      this.containerId.width = width;
      this.containerId.height = height;
      this.carbonImage = new Image();
      this.carbonImage.src = '../success/resourse/static/background/carbone.png';
      this.carbonImage.onload = function () {
        return _this2.doInitCarbon();
      };
    }
  }, {
    key: "doInitCarbon",
    value: function doInitCarbon() {
      var container = this.containerId;
      var width = container.width;
      var height = container.height;
      var imgWidth = 224;
      var imgHeight = 263;
      var space = 10;
      var reverse = true;
      var spaceReverse = 0;
      var listCarbon = [];
      var numImgsHorizontally = Math.floor((width + space) / (imgWidth + space)) + 1;
      var numImgsVertically = Math.floor((height + space) / (imgWidth + space)) + 1;
      for (var i = 0; i < numImgsVertically; i++) {
        reverse = !reverse;
        var thisEl = void 0;
        if (!reverse) {
          this.containerId.insertAdjacentHTML('beforeend', "<div class='imagesGrid'></div>");
        } else {
          this.containerId.insertAdjacentHTML('beforeend', "<div class='imagesGrid reverse'></div>");
        }
        thisEl = this.containerId.querySelectorAll('.imagesGrid');
        thisEl = thisEl[thisEl.length - 1];
        if (reverse) {
          spaceReverse = 60;
        }
        thisEl.style.marginTop = "-".concat(spaceReverse, "px");
        for (var j = 0; j < numImgsHorizontally; j++) {
          var startPointID = i * 8;
          // let x = j * (imgWidth + space);
          // let y = (i * (imgHeight + space)) - spaceReverse;

          // if(reverse){
          //     x -= 117;
          //     y -= 70
          // }

          listCarbon.push({
            id: startPointID + j
          });
          var imageCopy = this.carbonImage.cloneNode();
          thisEl.insertAdjacentHTML('beforeend', "<div class='wrapper'></div>");
          var wrapper = thisEl.querySelector('.wrapper:last-child');
          wrapper.appendChild(imageCopy);
        }
      }
      this.listsElements.push(listCarbon);
    }
  }]);
  return CarboneCanvas;
}();

/***/ }),
/* 3 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   randomIze: function() { return /* binding */ randomIze; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var randomIze = /*#__PURE__*/function () {
  function randomIze() {
    _classCallCheck(this, randomIze);
  }
  _createClass(randomIze, null, [{
    key: "getRandomInt",
    value: function getRandomInt(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min;
    }
  }, {
    key: "getRandomElements",
    value: function getRandomElements(arr, i) {
      var arr_ = [];
      var tempArr = _toConsumableArray(arr);
      for (var j = 0; j < i; j++) {
        if (tempArr.length === 0) break;
        var index = Math.floor(Math.random() * tempArr.length);
        var getEl = tempArr.splice(index, 1)[0];
        arr_.push(getEl);
      }
      return arr_;
    }
  }, {
    key: "getRandomElAndChangeExp",
    value: function getRandomElAndChangeExp(arr, i) {
      var arr_ret = [];
      var tempArr = _toConsumableArray(arr);
      for (var j = 0; j < i; j++) {
        if (tempArr.length === 0) break;
        var index = Math.floor(Math.random() * tempArr.length);
        var getEl = tempArr.splice(index, 1)[0];
        getEl.exposure_end = this.getRandomFloat(0.4, 1.6);
        arr_ret.push(getEl);
      }
      return arr_ret;
    }
  }, {
    key: "getRandomFloat",
    value: function getRandomFloat(min, max) {
      var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
      return parseFloat((Math.random() * (max - min) + min).toFixed(n));
    }
  }]);
  return randomIze;
}();

/***/ }),
/* 4 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CanvasLine: function() { return /* binding */ CanvasLine; }
/* harmony export */ });
/* harmony import */ var _module_random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var CanvasLine = /*#__PURE__*/function () {
  function CanvasLine(container, parram) {
    var _this = this;
    _classCallCheck(this, CanvasLine);
    _defineProperty(this, "container", void 0);
    _defineProperty(this, "canvas", void 0);
    _defineProperty(this, "dataDraw", []);
    _defineProperty(this, "controller_engine", {
      controller: {
        id: null,
        status: false
      },
      engine: {
        id: null,
        status: false
      }
    });
    _defineProperty(this, "controller", function (action) {
      if (action === "turnOn") {
        if (!_this.controller_engine.controller.status) _this.generateLine();
        if (!_this.controller_engine.engine.status) _this.doAnimation();
      } else {
        if (_this.controller_engine.controller.status) {
          _this.controller_engine.controller.status = false;
          clearInterval(_this.controller_engine.controller.id);
        }
        if (_this.controller_engine.engine.status) {
          _this.controller_engine.engine.status = false;
          cancelAnimationFrame(_this.controller_engine.engine.id);
        }
      }
    });
    if (container) this.container = container;
    this.initCanvas(parram);
    this.generateLine();
  }
  _createClass(CanvasLine, [{
    key: "initCanvas",
    value: function initCanvas(parram) {
      var canvas = parram.canvas;
      var ctx = canvas.getContext("2d");
      canvas.width = parram.width;
      canvas.height = parram.height;
      this.canvas = canvas;
      this.controller("turnOn");
    }
  }, {
    key: "generateLine",
    value: function generateLine() {
      var _this2 = this;
      this.controller_engine.controller.id = setInterval(function () {
        if (_this2.dataDraw.length <= 1) {
          //addNewLine
          var newLine = _this2.getRandomData();
          _this2.dataDraw.push(newLine);
        }
      }, 1000);
      this.controller_engine.controller.status = true;
    }
  }, {
    key: "doAnimation",
    value: function doAnimation() {
      var _this3 = this;
      var loop = function loop() {
        if (_this3.dataDraw.length > 0) {
          var i = 0;
          var deleted = -1;
          _this3.dataDraw.forEach(function (data) {
            //calculsate data
            if (data.x.direction === "toRight" && _this3.isDone("x", data) === false && !data.finished) {
              data.x.point += 2;
            } else if (data.x.direction === "toLeft" && !_this3.isDone("x", data) && !data.finished) {
              data.x.point -= 2;
            } else if (data.finished && data.x.direction === "toRight" && !_this3.isDone("finished", data)) {
              data.x.start += 4;
            } else if (data.finished && data.x.direction === "toLeft" && !_this3.isDone("finished", data)) {
              data.x.start -= 4;
            }
            if (data.y.direction === "toBottom" && !_this3.isDone("y", data) && !data.finished) {
              data.y.point += 2;
            } else if (data.y.direction === "toTop" && !_this3.isDone("y", data) && !data.finished) {
              data.y.point -= 2;
            } else if (data.finished && data.y.direction === "toBottom" && !_this3.isDone("finished_y", data)) {
              data.y.start += 4;
            } else if (data.finished && data.y.direction === "toTop" && !_this3.isDone("finished_y", data)) {
              data.y.start -= 4;
            }
            _this3.drawCanvas();

            //check if data need delete
            if (_this3.isDone("x", data) && _this3.isDone("y", data)) {
              data.finished = true;
              _this3.dataDraw.finished = true;
            }
            if (_this3.isDone("finished", data) && _this3.isDone("finished_y", data)) {
              deleted = i;
            }
            i++;
          });
          if (deleted !== -1) {
            _this3.dataDraw.splice(deleted, 1);
          }
          _this3.controller_engine.engine.id = requestAnimationFrame(_this3.doAnimation.bind(_this3));
          _this3.controller_engine.engine.status = true;
        }
      };
      if (this.dataDraw.length <= 0) {
        setTimeout(loop, 1000);
        cancelAnimationFrame(this.controller_engine.engine.id);
        this.controller_engine.engine.status = false;
      } else {
        loop();
      }
    }
  }, {
    key: "isDone",
    value: function isDone(type, data) {
      if (type !== "finished" && type !== "finished_y") {
        var _data = type === "x" ? data.x : data.y;
        if (_data.direction === "toRight" || _data.direction === "toBottom") {
          if (_data.point >= _data.end) {
            return true;
          }
        } else {
          if (_data.point <= _data.end) {
            return true;
          }
        }
      } else if (type === "finished_y") {
        if (data.y.direction === "toBottom" && data.y.start >= data.y.end - 1) return true;
        if (data.y.direction === "toTop" && data.y.start <= data.y.end - 1) return true;
      } else {
        if (data.x.direction === "toRight" && data.x.start >= data.x.end - 1) return true;
        if (data.x.direction === "toLeft" && data.x.start <= data.x.end - 1) return true;
      }
      return false;
    }
  }, {
    key: "getRandomData",
    value: function getRandomData() {
      var newData = {};
      var x = {
        start: 0,
        end: 0,
        point: 0
      };
      var y = {
        start: 0,
        end: 0,
        point: 0
      };
      var randomColor = this.getRgbSett(_module_random__WEBPACK_IMPORTED_MODULE_0__.randomIze.getRandomInt(1, 4));
      var i = 0;
      while (true) {
        x.start = _module_random__WEBPACK_IMPORTED_MODULE_0__.randomIze.getRandomInt(0, this.canvas.width);
        x.end = _module_random__WEBPACK_IMPORTED_MODULE_0__.randomIze.getRandomInt(0, this.canvas.width);
        y.start = _module_random__WEBPACK_IMPORTED_MODULE_0__.randomIze.getRandomInt(0, this.canvas.height);
        y.end = _module_random__WEBPACK_IMPORTED_MODULE_0__.randomIze.getRandomInt(0, this.canvas.height);
        if (Math.abs(x.start - x.end) > 300 && Math.abs(y.start - y.end) > 100) break;
        if (i >= 100000) {
          alert("Memory error, pls contact developer via telegram @GetWorld");
          break;
        }
        i++;
      }
      newData.x = x;
      newData.x.point = newData.x.start;
      newData.x.direction = x.start < x.end ? "toRight" : "toLeft";
      newData.gradient = randomColor;
      newData.y = y;
      newData.y.point = newData.y.start;
      newData.y.direction = y.start < y.end ? "toBottom" : "toTop";
      newData.finished = false;
      return newData;
    }
  }, {
    key: "drawCanvas",
    value: function drawCanvas() {
      var canvas = this.canvas;
      var ctx = canvas.getContext("2d");
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      this.dataDraw.forEach(function (data) {
        ctx.lineWidth = 200;
        var gradient = ctx.createLinearGradient(data.x.start, 300, data.x.point, 300);
        var i = 0;
        data.gradient.forEach(function (color) {
          gradient.addColorStop(i, color);
          i++;
        });
        ctx.strokeStyle = gradient;
        ctx.shadowColor = data.gradient[0];
        ctx.shadowBlur = 20;
        ctx.beginPath();
        ctx.moveTo(data.x.start, data.y.start);
        ctx.lineTo(data.x.point, data.y.point);
        ctx.stroke();
      });
    }
  }, {
    key: "getRgbSett",
    value: function getRgbSett(rnd) {
      switch (rnd) {
        case 1:
          return ["#ff9756", "#94ee9d"];
          break;
        case 2:
          return ["#d556ff", "#56ffd2"];
          break;
        case 3:
          return ["#d5ff56", "#ff5656"];
          break;
        default:
          return ["#566dff", "#ff5656"];
      }
    }
  }]);
  return CanvasLine;
}();

/***/ }),
/* 5 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Optimizator: function() { return /* binding */ Optimizator; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Optimizator = /*#__PURE__*/function () {
  function Optimizator(elements) {
    var _this = this;
    _classCallCheck(this, Optimizator);
    _defineProperty(this, "elements", void 0);
    _defineProperty(this, "OldPosition", window.scrollY);
    this.elements = elements;

    //activate allPrograms
    this.elements.forEach(function (el) {
      _this.turnOnProccess(el);
    });
    window.addEventListener("scroll", function () {
      return _this.watchProccess();
    });
  }
  _createClass(Optimizator, [{
    key: "doRestore",
    value: function doRestore() {
      var _this2 = this;
      setTimeout(function () {
        return _this2.watchProccess();
      }, 100);
    }
  }, {
    key: "watchProccess",
    value: function watchProccess() {
      var _this3 = this;
      console.log(this.elements);
      this.elements.forEach(function (el) {
        if (el.type === "lightAnim") {
          if (el.container && el.container.length > 0) {
            var getElements = el.container;
            getElements.forEach(function (element) {
              var getContainer = element.id;
              var DiffrentPosition = _this3.getDiffrentPosition(getContainer);
              if (DiffrentPosition > 600) {
                el.action("turnOff", element);
              } else {
                el.action("turnOn", element);
              }
            });
          }
          if (el.mainLight && el.mainLight.length > 0) {
            var _getElements = el.mainLight;
            _getElements.forEach(function (element) {
              var getContainer = element.id;
              var DiffrentPosition = _this3.getDiffrentPosition(getContainer);
              if (DiffrentPosition > 200) {
                if (el.add && el.add !== "disabledTurnOff") {
                  el.action("turnOff", element);
                }
              } else {
                el.action("turnOn", element);
              }
            });
          }
          if (el.add_light && el.add_light.length > 0) {
            var _getElements2 = el.add_light;
            _getElements2.forEach(function (element) {
              var getContainer = element.id;
              var DiffrentPosition = _this3.getDiffrentPosition(getContainer);
              if (DiffrentPosition > 300) {
                el.action("turnOff", element);
              } else {
                el.action("turnOn", element);
              }
            });
          }
          return;
        }
        if (el.type === "LockFilter") {
          var getDiffrent = _this3.getDiffrentPosition(el.container, false);
          var getBottom = el.container.offsetHeight; //2400
          var getContentH = el.content.offsetHeight;
          if (getDiffrent <= 50) {
            el.content.style.position = "fixed";
            el.container.querySelector(".fakeContent").style.display = "block";
            if (Math.abs(getDiffrent) >= getBottom - getContentH) {
              el.content.style.position = "absolute";
              el.content.style.top = "auto";
              el.content.style.bottom = "0";
              el.content.style.transform = "translateY(0)";
              el.container.querySelector(".fakeContent").style.display = "block";
            } else {
              el.content.style.position = "fixed";
              el.content.style.top = "50%";
              el.content.style.transform = "translateY(-50%)";
              el.content.style.bottom = "auto";
              el.container.querySelector(".fakeContent").style.display = "block";
            }
          } else {
            el.content.style.position = "static";
            el.content.style.transform = "none";
            el.container.querySelector(".fakeContent").style.display = "none";
          }
          return;
        }
        var getContainer = el.container;
        var diffrentPosition = _this3.getDiffrentPosition(getContainer);
        if (diffrentPosition > 500) {
          _this3.disabledProgram(el);
        } else {
          _this3.turnOnProccess(el);
        }

        //ANIMATION_CAR
        //get dist
        // getContainer = el.container
        // diffrentPosition = this.getDiffrentPosition(getContainer)
        //
        // if(el.type === "animationCar" && diffrentPosition < 900){
        //     const data = {
        //         oldPosition: this.OldPosition,
        //         newPosition: window.scrollY
        //     }
        //
        //     el.action(data)
        // }
      });

      this.OldPosition = window.scrollY;
    }
  }, {
    key: "getDiffrentPosition",
    value: function getDiffrentPosition(getContainer) {
      var isAbs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var elementPosition = getContainer.getBoundingClientRect().top;
      if (isAbs) return Math.abs(elementPosition);
      return elementPosition;
    }
  }, {
    key: "disabledProgram",
    value: function disabledProgram(element) {
      switch (element.type) {
        case "carboneAnimation":
          if (element.id.status === false) return;
          clearInterval(element.id.id);
          element.id.status = false;
          break;
        case "carboneLine":
          element.action("turnOff");
          break;
      }
    }
  }, {
    key: "turnOnProccess",
    value: function turnOnProccess(element) {
      switch (element.type) {
        case "carboneAnimation":
          if (element.id.status !== false) return;
          element.reset();
          break;
        case "carboneLine":
          element.action("turnOn");
          break;
      }
    }
  }]);
  return Optimizator;
}();

/***/ }),
/* 6 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NeonsLight: function() { return /* binding */ NeonsLight; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var NeonsLight = /*#__PURE__*/function () {
  function NeonsLight(ARR, mainLights) {
    var _this = this;
    _classCallCheck(this, NeonsLight);
    _defineProperty(this, "lights_export", []);
    _defineProperty(this, "mainLight", []);
    _defineProperty(this, "add_light", []);
    _defineProperty(this, "globalSettings", {
      turnOff_color: "#4d4d4d",
      turnOff_gradient: "#424242",
      turnOff_add: "#3d3d3d"
    });
    _defineProperty(this, "controller_light", function (type, element) {
      if (type === "turnOff" && element.status === true) {
        _this.turnOffLight(element.id);
        element.status = false;
      } else if (type === "turnOn" && element.status === false) {
        _this.turnOnLight(element.id);
        element.status = true;
      } else if (type === "changeMainLight") {
        element.forEach(function (el) {
          if (el.status === true) {
            _this.turnOnLight(el.id);
          }
        });
      }
    });
    _defineProperty(this, "turnOnLight", function (element) {
      if (element.classList.contains("mainLight")) {
        var data = _this.getDataColor();
        element.querySelector(".fakeLight").style.boxShadow = "0px 4px 250px 201px ".concat(data.shadow);
        element.style.background = "".concat(data.color);
        if (document.querySelectorAll(".GlobalText").length > 0) {
          var el_text = document.querySelectorAll(".GlobalText");
          el_text.forEach(function (el) {
            el.style.color = data.color;
            el.style.textShadow = "0px 0px 60px ".concat(data.shadow);
          });
        }
      } else {
        if (element.getAttribute("data-type") === "add_light") {
          var getClassText = element.getAttribute("data-text");
          var getImg = document.querySelector(getClassText);
          var getText = document.querySelectorAll(getClassText)[1];
          var getSecondText = document.querySelectorAll(getClassText)[2];
          var getColor = element.getAttribute("data-color");
          var getShadow = element.getAttribute("data-shadow");
          getImg.style.opacity = 1;
          getText.style.color = "white";
          getSecondText.style.color = "#CBCBCB";
          getText.classList.add("animation_turnOnLight");
          getSecondText.classList.add("animation_turnOnLight");
          element.classList.add("animation_turnOnLight");
          element.style.background = getColor;
          element.style.boxShadow = "0px 0px 250px 136px ".concat(getShadow);
        } else {
          var _data = {
            color: element.getAttribute("data-color"),
            shadow: element.getAttribute("data-shadow")
          };
          var text_color = element.querySelector("h2");
          var bg_color = element.querySelector(".fakeLine");
          text_color.style.color = "white";
          bg_color.style.background = _data.color;
          bg_color.style.boxShadow = "0px 0px 37px 12px ".concat(_data.shadow);
        }
      }
    });
    _defineProperty(this, "turnOffLight", function (element) {
      if (element.classList.contains("mainLight")) {
        element.querySelector(".fakeLight").style.boxShadow = "0px 4px 250px 201px transparent";
        element.style.background = _this.globalSettings.turnOff_color;
        if (document.querySelectorAll(".GlobalText").length > 0) {
          var el_text = document.querySelectorAll(".GlobalText");
          el_text.forEach(function (el) {
            el.style.color = _this.globalSettings.turnOff_gradient;
            el.style.textShadow = "0px 0px 39px transparent";
          });
        }
      } else {
        if (element.getAttribute("data-type") === "add_light") {
          var getClassText = element.getAttribute("data-text");
          var getImg = document.querySelector(getClassText);
          var getText = document.querySelectorAll(getClassText)[1];
          var getSecondText = document.querySelectorAll(getClassText)[2];
          var getColor = _this.globalSettings.turnOff_add;
          getImg.style.opacity = "0.6";
          getText.style.color = "#393939";
          getSecondText.style.color = "#393939";
          getText.classList.remove("animation_turnOnLight");
          getSecondText.classList.remove("animation_turnOnLight");
          element.classList.remove("animation_turnOnLight");
          element.style.background = getColor;
          element.style.boxShadow = "0px 0px 250px 136px transparent";
        } else {
          var text_color = element.querySelector("h2");
          var bg_color = element.querySelector(".fakeLine");
          text_color.style.color = "#4D4D4D";
          bg_color.style.background = "#282828";
          bg_color.style.boxShadow = "0px 0px 37px 12px transparent";
        }
      }
    });
    if (ARR) ARR.forEach(function (el) {
      if (el.getAttribute("data-type") === "add_light") {
        _this.add_light.push({
          id: el,
          status: false
        });
      } else {
        _this.lights_export.push({
          id: el,
          status: false
        });
      }
    });
    if (mainLights) {
      mainLights.forEach(function (el) {
        _this.mainLight.push({
          id: el,
          status: false
        });
      });
    }
  }
  _createClass(NeonsLight, [{
    key: "getDataColor",
    value: function getDataColor() {
      var getData = document.querySelector("#mainSwiper");
      if (getData) {
        var data = getData.querySelector(".swiper-slide.swiper-slide-active");
        return {
          color: data.getAttribute("data-color"),
          shadow: data.getAttribute("data-shadow")
        };
      } else {
        var _data2 = document.querySelector(".leftLight.mainLight");
        return {
          color: _data2.getAttribute("data-color"),
          shadow: _data2.getAttribute("data-shadow")
        };
      }
    }
  }]);
  return NeonsLight;
}();

/***/ }),
/* 7 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Swipers: function() { return /* binding */ Swipers; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Swipers = /*#__PURE__*/function () {
  function Swipers() {
    _classCallCheck(this, Swipers);
  }
  _createClass(Swipers, null, [{
    key: "initMainSwiper",
    value: function initMainSwiper(dom, argument) {
      var mainSwiper = new Swiper(dom, {
        loop: true,
        effect: 'fade',
        autoplay: {
          delay: 5000
        },
        fadeEffect: {
          crossFade: true,
          delay: 700
        },
        on: {
          slideChangeTransitionEnd: function slideChangeTransitionEnd() {
            setTimeout(function () {
              argument.action("changeMainLight", argument.id);
            }, 100);
          }
        }
      });
      return mainSwiper;
    }
  }, {
    key: "initReviwsSwiper",
    value: function initReviwsSwiper(dom, argument) {
      //swiper_reviews_main

      new Swiper(dom, {
        loop: false,
        slidesPerView: 3,
        spaceBetween: 75,
        slidesPerGroup: 1,
        navigation: {
          prevEl: argument.left,
          nextEl: argument.right
        }
      });
    }
  }, {
    key: "initNewCarSwiper",
    value: function initNewCarSwiper(dom) {
      var btnLeft = document.getElementById("swiperButton_toPrev_newCar");
      var btnRight = document.getElementById("swiperButton_toNext_newCar");
      new Swiper(dom, {
        loop: false,
        slidesPerView: 3,
        spaceBetween: 33,
        slidesPerGroup: 1,
        navigation: {
          prevEl: btnLeft,
          nextEl: btnRight
        }
      });
    }
  }, {
    key: "initProductSwiper",
    value: function initProductSwiper() {
      var btnLeft = document.getElementById("swiper_product-left");
      var btnRight = document.getElementById("swiper_product-right");
      new Swiper(document.getElementById("swiper_product"), {
        loop: false,
        slidesPerView: 1,
        spaceBetween: 20,
        slidesPerGroup: 1,
        navigation: {
          prevEl: btnLeft,
          nextEl: btnRight
        }
      });
    }
  }, {
    key: "initFullScreen",
    value: function initFullScreen() {
      new Swiper(document.getElementById("fullSwiperWrapperSmall"), {
        loop: false,
        slidesPerView: 8,
        slidesPerGroup: 1,
        navigation: {
          // prevEl: btnLeft,
          // nextEl: btnRight,
        }
      });
    }
  }, {
    key: "initAutoSwiper",
    value: function initAutoSwiper() {
      document.querySelectorAll(".initAutoSwiper").forEach(function (el) {
        new Swiper(el, {
          loop: true,
          slidesPerView: 1,
          slidesPerGroup: 1,
          effect: 'fade',
          noSwiping: true,
          allowTouchMove: false,
          autoplay: {
            delay: 3000
          },
          fadeEffect: {
            crossFade: true,
            delay: 700
          }
        });
      });
    }
  }]);
  return Swipers;
}();

/***/ }),
/* 8 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkbox: function() { return /* binding */ checkbox; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var checkbox = /*#__PURE__*/function () {
  function checkbox() {
    _classCallCheck(this, checkbox);
    _defineProperty(this, "className", ".initCheckBox");
    _defineProperty(this, "initBoxs", void 0);
    var allBoxes = document.querySelectorAll(this.className);
    if (allBoxes.length < 1) return;
    this.initBoxs = allBoxes;
    this.Init();
  }
  _createClass(checkbox, [{
    key: "Init",
    value: function Init() {
      var _this = this;
      this.initBoxs.forEach(function (el) {
        el.addEventListener("click", _this.eventClick.bind(_this));
      });
    }
  }, {
    key: "eventClick",
    value: function eventClick(e) {
      var input = e.currentTarget.querySelector('input[type="checkbox"]');
      if (input) {
        if (input.checked) {
          this.TurnOff(e.currentTarget, input);
        } else {
          this.TurnOn(e.currentTarget, input);
        }
      }
    }
  }, {
    key: "TurnOn",
    value: function TurnOn(el, input) {
      el.querySelectorAll(".side").forEach(function (side) {
        return side.classList.remove("active");
      });
      el.querySelector(".checked").classList.add("active");
      el.querySelector(".side").classList.add("active");
      var event = new MouseEvent("click", {
        view: window
      });
      input.dispatchEvent(event);
    }
  }, {
    key: "TurnOff",
    value: function TurnOff(el, input) {
      el.querySelectorAll(".side").forEach(function (side) {
        return side.classList.remove("active");
      });
      el.querySelector(".checked").classList.remove("active");
      el.querySelectorAll(".side")[1].classList.add("active");
      var event = new MouseEvent("click", {
        view: window
      });
      input.dispatchEvent(event);
    }
  }]);
  return checkbox;
}();

/***/ }),
/* 9 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RoadAnimation: function() { return /* binding */ RoadAnimation; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var RoadAnimation = /*#__PURE__*/function () {
  // private animationStack = []

  function RoadAnimation(canvas, container) {
    var _this = this;
    _classCallCheck(this, RoadAnimation);
    _defineProperty(this, "initRoadGradient", {
      bottom: 0.1
    });
    _defineProperty(this, "initCar", []);
    _defineProperty(this, "initCanvas", void 0);
    _defineProperty(this, "engineWhile", void 0);
    _defineProperty(this, "getAndCalcData", function (data) {
      var thisCar = _this.initCar[0];
      var diffranse = Math.abs(data.oldPosition - data.newPosition);
      if (diffranse > 700) return;
      if (data.oldPosition < data.newPosition) {
        //to bottom
        if (thisCar.y < 800) {
          _this.changeGradient("toBottom");
          _this.moveCar("toBottom");
          _this.initCar[0].y_new.push(parseInt(_this.initCar[0].y) + parseInt(diffranse));

          // this.animationStack.push({ y_new:  })
          // console.log("Diffrance: "+ diffranse + " ,endResult: " + this.initCar[0].y_new)
          // console.log("do toBottom")
        }
      } else {
        // if(thisCar.y >= thisCar.y_new && thisCar.y < 800 ){
        //     this.initCar[0].y_new = (-(parseInt(this.initCar[0].y) + parseInt(diffranse)))
        //     // console.log(this.initCar[0].y_new + " ---- "+ this.initCar[0].y)
        //     this.changeGradient("toTop")
        //     this.moveCar("toTop")
        //
        //     // console.log("toTop")
        // }
      }
    });
    if (canvas) this.initCanvas = canvas;
    canvas.width = container.clientWidth;
    canvas.height = container.clientHeight;
    var img = new Image();
    img.src = "/success/resourse/static/decorations/car_from_top.png";
    img.onload = function () {
      _this.initCar.push({
        y: 50,
        y_new: -100,
        image: img,
        x: 1510
      });
      _this.initObjects();
    };
  }
  _createClass(RoadAnimation, [{
    key: "initObjects",
    value: function initObjects() {
      this.drawRoad(this.initCanvas, this.initCanvas.getContext("2d"));
      this.drawCar(this.initCanvas, this.initCanvas.getContext("2d"));
    }
  }, {
    key: "changeGradient",
    value: function changeGradient(dir) {
      if (dir === "toBottom") {
        if (this.initRoadGradient.bottom !== 0.9) {
          this.initRoadGradient.bottom = this.initRoadGradient.bottom += 0.008;
          if (this.initRoadGradient.bottom > 0.9) this.initRoadGradient.bottom = 0.9;
        }
      } else {
        if (this.initRoadGradient.bottom !== 0.1) {
          this.initRoadGradient.bottom = this.initRoadGradient.bottom -= 0.008;
          if (this.initRoadGradient.bottom < 0.1) this.initRoadGradient.bottom = 0.1;
        }
      }
    }
  }, {
    key: "moveCar",
    value: function moveCar() {
      var car = this.initCar[0];

      // console.log(car[0].y + "  --- " + car[0].y_new)

      if (car.y !== car.y_new && car.y < car.y_new) {
        car.y += 1;
        this.engine();
        this.engineWhile = requestAnimationFrame(this.moveCar.bind(this));
        if (car.y === car.y_new) {
          cancelAnimationFrame(this.engineWhile);
        }
      } else {
        console.log("do cancel - " + this.initCar[0].y + " wanna - " + this.initCar[0].y_new);
        cancelAnimationFrame(this.engineWhile);
      }
    }
  }, {
    key: "engine",
    value: function engine() {
      var canvas = this.initCanvas;
      var ctx = canvas.getContext("2d");
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      this.drawRoad(canvas, ctx);
      this.drawCar(canvas, ctx);
    }
  }, {
    key: "drawCar",
    value: function drawCar(canvas, ctx) {
      var car = this.initCar[0];
      ctx.drawImage(car.image, car.x, car.y, 113, 157);
    }
  }, {
    key: "drawRoad",
    value: function drawRoad(canvas, ctx) {
      // Нарисуйте квадрат
      ctx.beginPath();
      ctx.rect(canvas.width - 190, 0, 190, canvas.height * 0.9); // Параметры: (x, y, ширина, высота)
      ctx.fillStyle = '#131313'; // Задайте цвет заливки
      ctx.fill(); // Заполните квадрат цветом
      ctx.closePath();

      // Нарисуйте квадрат
      ctx.beginPath();
      ctx.rect(0, canvas.height * 0.9 - 140, canvas.width, 140); // Параметры: (x, y, ширина, высота)
      ctx.fillStyle = '#131313'; // Задайте цвет заливки
      ctx.fill(); // Заполните квадрат цветом
      ctx.closePath();

      // Нарисуйте квадрат
      ctx.beginPath();
      ctx.rect(0, canvas.height * 0.9 - 140, 190, 230); // Параметры: (x, y, ширина, высота)
      ctx.fillStyle = '#131313'; // Задайте цвет заливки
      ctx.fill(); // Заполните квадрат цветом
      ctx.closePath();

      // Создайте градиент
      var gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);
      gradient.addColorStop(1, 'rgba(255, 100, 249, 0)');
      gradient.addColorStop(this.initRoadGradient.bottom, '#FF7B7B');

      //right line
      ctx.beginPath();
      ctx.lineWidth = 13;
      ctx.moveTo(canvas.width, 0);
      ctx.lineTo(canvas.width, canvas.height * 0.9);
      ctx.lineTo(canvas.width * 0.5, canvas.height * 0.9);
      ctx.lineTo(190, canvas.height * 0.9);
      ctx.lineTo(190, canvas.height);
      ctx.setLineDash([0, 0]);
      ctx.strokeStyle = gradient;
      ctx.stroke();

      //left line
      ctx.lineWidth = 9;
      ctx.beginPath();
      ctx.moveTo(canvas.width - 190, 0);
      ctx.lineTo(canvas.width - 190, canvas.height * 0.74);
      ctx.lineTo((canvas.width - 190) * 0.5, canvas.height * 0.74);
      ctx.lineTo(0, canvas.height * 0.74);
      ctx.lineTo(0, canvas.height);
      ctx.setLineDash([0, 0]);
      ctx.strokeStyle = gradient;
      ctx.stroke();

      //center line
      ctx.lineWidth = 6;
      ctx.beginPath();
      ctx.setLineDash([60, 40]);
      ctx.moveTo(canvas.width - 95, 0);
      ctx.lineTo(canvas.width - 95, canvas.height * 0.82);
      ctx.lineTo((canvas.width - 95) * 0.5, canvas.height * 0.82);
      ctx.lineTo(95, canvas.height * 0.82);
      ctx.lineTo(95, canvas.height);
      ctx.strokeStyle = gradient;
      ctx.stroke();
    }
  }]);
  return RoadAnimation;
}();

/***/ }),
/* 10 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InputPrice: function() { return /* binding */ InputPrice; }
/* harmony export */ });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var InputPrice = /*#__PURE__*/function () {
  function InputPrice(inputs) {
    _classCallCheck(this, InputPrice);
    _defineProperty(this, "priceDom", []);
    if (inputs) {
      this.priceDom = inputs;
      this.initPriceInput();
    }
  }
  _createClass(InputPrice, [{
    key: "initPriceInput",
    value: function initPriceInput() {
      var _this = this;
      this.priceDom.forEach(function (el) {
        el.addEventListener("input", _this.initEventListener.bind(_this));
        var getCheck = el.getAttribute("data-plates");
        getCheck = document.getElementById(getCheck);
        if (getCheck) getCheck.addEventListener("change", _this.output_data.bind(_this, el));
      });
    }
  }, {
    key: "output_data",
    value: function output_data(el) {
      var value = el.value.replace(/[^0-9]/g, '');
      if (value.length >= 4) {
        value = parseInt(value);
        var getChekbox = el.getAttribute("data-plates");
        var getContainer = el.getAttribute("data-output");
        var globalPrice = document.querySelector(".totalToPay");
        var isPlates = document.getElementById(getChekbox).checked;
        var getContainerView = document.getElementById(getContainer);

        //car price = 7000
        var plates = isPlates ? 25 : 151;
        var data = {
          carPrice: value,
          carTax: (value * 0.07).toFixed(0),
          title: 165,
          plates: plates,
          docs: 250
        };
        var totalRegistration = parseInt(parseInt(data.carTax) + parseInt(data.title) + parseInt(data.plates) + parseInt(data.docs)).toFixed(0);
        var totalToPay = parseInt(parseInt(data.carPrice) + parseInt(data.carTax) + parseInt(data.title) + parseInt(data.plates) + parseInt(data.docs)).toFixed(0);
        totalToPay = _validation__WEBPACK_IMPORTED_MODULE_0__.Validation.validationByNumbers(totalToPay);
        //remove wait
        getContainerView.querySelector(".tax__input").innerHTML = data.carTax + "$";
        getContainerView.querySelector(".title__input").innerHTML = data.title + "$";
        getContainerView.querySelector(".plates__input").innerHTML = data.plates + "$";
        getContainerView.querySelector(".docs__input").innerHTML = data.docs + "$";
        getContainerView.querySelector(".reg__total").innerHTML = totalRegistration;
        if (globalPrice) globalPrice.innerHTML = totalToPay;
        getContainerView.querySelector(".holder").style.opacity = 0;
        //put data
      } else {
        var _getContainer = el.getAttribute("data-output");
        var _getContainerView = document.getElementById(_getContainer);
        _getContainerView.querySelector(".holder").style.opacity = 1;
        var _globalPrice = document.querySelector(".totalToPay");
        if (_globalPrice) _globalPrice.innerHTML = 0;
      }
    }
  }, {
    key: "initEventListener",
    value: function initEventListener(e) {
      var input = e.target;
      var value = input.value;

      // Удаляем символ доллара, если он есть
      value = value.replace(/[^0-9]/g, '');

      // Проверяем, была ли нажата клавиша Backspace
      var isBackspace = event.inputType === 'deleteContentBackward';
      if (isBackspace) {
        // Если была нажата Backspace, удаляем последний символ перед долларом
        if (value.length > 1) {
          value = value.substr(0, value.length - 1);
        } else {
          value = 0;
        }
      }
      if (value.length > 6) {
        value = value.substr(0, value.length - 1);
        value = _validation__WEBPACK_IMPORTED_MODULE_0__.Validation.validationByNumbers(value, "$");
        input.value = value.value;
        return;
      }
      if (parseInt(value[0]) === 0) {
        value = value.substr(1, value.length);
      }
      value = _validation__WEBPACK_IMPORTED_MODULE_0__.Validation.validationByNumbers(value, "$");
      input.value = value.value;
      this.output_data(e.target);
    }
  }]);
  return InputPrice;
}();

/***/ }),
/* 11 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Validation: function() { return /* binding */ Validation; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Validation = /*#__PURE__*/function () {
  function Validation() {
    _classCallCheck(this, Validation);
  }
  _createClass(Validation, null, [{
    key: "validationByNumbers",
    value: function validationByNumbers(value) {
      var exp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      var isBackSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
      //cleare
      value = value.replace(/[^0-9]/g, '');
      //dublicate
      var value_clear = value;
      if (isBackSpace) {
        if (value.length > 1) {
          value = value.substr(0, value.length - 1);
        } else {
          value = 0;
        }
      }
      if (value.length >= 2 && value[0] === "0") {
        value = value.substr(1, value.length);
      }
      if (value.length === 4) {
        var firstPart = value.slice(0, 1);
        var secondPart = value.slice(1);
        value = firstPart + " " + secondPart;
      }
      if (value.length === 5) {
        var _firstPart = value.slice(0, 2);
        var _secondPart = value.slice(2);
        value = _firstPart + " " + _secondPart;
      }
      if (value.length === 6) {
        var _firstPart2 = value.slice(0, 3);
        var _secondPart2 = value.slice(3);
        value = _firstPart2 + " " + _secondPart2;
      }
      if (exp !== null) return {
        value: value + exp,
        valueClear: value_clear
      };
      return {
        value: value,
        valueClear: value_clear
      };
    }
  }]);
  return Validation;
}();

/***/ }),
/* 12 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MapLocation: function() { return /* binding */ MapLocation; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var MapLocation = /*#__PURE__*/function () {
  function MapLocation() {
    _classCallCheck(this, MapLocation);
    _defineProperty(this, "map", void 0);
    window.initMap = this.initMap;
  }
  _createClass(MapLocation, [{
    key: "initMap",
    value: function initMap() {
      this.map = new google.maps.Map(document.getElementById("GoogleMap"), {
        center: {
          lat: -33.86,
          lng: 151.209
        },
        zoom: 13,
        mapTypeControl: false
      });

      //styles

      var styles = {
        default: [],
        night: [{
          elementType: "geometry",
          stylers: [{
            color: "#242f3e"
          }]
        }, {
          elementType: "labels.text.stroke",
          stylers: [{
            color: "#242f3e"
          }]
        }, {
          elementType: "labels.text.fill",
          stylers: [{
            color: "#746855"
          }]
        }, {
          featureType: "administrative.locality",
          elementType: "labels.text.fill",
          stylers: [{
            color: "#d59563"
          }]
        }, {
          featureType: "poi",
          elementType: "labels.text.fill",
          stylers: [{
            color: "#d59563"
          }]
        }, {
          featureType: "poi.park",
          elementType: "geometry",
          stylers: [{
            color: "#263c3f"
          }]
        }, {
          featureType: "poi.park",
          elementType: "labels.text.fill",
          stylers: [{
            color: "#6b9a76"
          }]
        }, {
          featureType: "road",
          elementType: "geometry",
          stylers: [{
            color: "#38414e"
          }]
        }, {
          featureType: "road",
          elementType: "geometry.stroke",
          stylers: [{
            color: "#212a37"
          }]
        }, {
          featureType: "road",
          elementType: "labels.text.fill",
          stylers: [{
            color: "#9ca5b3"
          }]
        }, {
          featureType: "road.highway",
          elementType: "geometry",
          stylers: [{
            color: "#746855"
          }]
        }, {
          featureType: "road.highway",
          elementType: "geometry.stroke",
          stylers: [{
            color: "#1f2835"
          }]
        }, {
          featureType: "road.highway",
          elementType: "labels.text.fill",
          stylers: [{
            color: "#f3d19c"
          }]
        }, {
          featureType: "transit",
          elementType: "geometry",
          stylers: [{
            color: "#2f3948"
          }]
        }, {
          featureType: "transit.station",
          elementType: "labels.text.fill",
          stylers: [{
            color: "#d59563"
          }]
        }, {
          featureType: "water",
          elementType: "geometry",
          stylers: [{
            color: "#17263c"
          }]
        }, {
          featureType: "water",
          elementType: "labels.text.fill",
          stylers: [{
            color: "#515c6d"
          }]
        }, {
          featureType: "water",
          elementType: "labels.text.stroke",
          stylers: [{
            color: "#17263c"
          }]
        }]
      };
      this.map.setOptions({
        styles: styles.night
      });
    }
  }]);
  return MapLocation;
}();

/***/ }),
/* 13 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InitForm: function() { return /* binding */ InitForm; }
/* harmony export */ });
/* harmony import */ var _module_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var InitForm = /*#__PURE__*/function () {
  function InitForm() {
    var _this = this;
    _classCallCheck(this, InitForm);
    document.querySelectorAll("form").forEach(function (form) {
      form.addEventListener("submit", function (e) {
        e.preventDefault();
      });
      form.querySelectorAll("input").forEach(function (el) {
        return el.addEventListener("input", function (e) {
          return _this.checkStatus_form(e, form);
        });
      });
      if (form.querySelector(".btn-ui-send")) {
        form.querySelector(".btn-ui-send").addEventListener("click", function (e) {
          return _this.sendData(e, form);
        });
      }
    });
  }
  _createClass(InitForm, [{
    key: "sendData",
    value: function sendData(e, form) {
      var getName = form.document.getElementById("nameOfInputContactMe");
      var getPhone_mail = form.document.getElementById("addOfInputContactMe");
      if (getName && getPhone_mail) {
        //do ajax send
      }
    }
  }, {
    key: "checkStatus_form",
    value: function checkStatus_form(e, form) {
      var isDone = true;
      form.querySelectorAll("input").forEach(function (el) {
        if (el.getAttribute("type") !== "tel" && el.value.length < 3) {
          isDone = false;
        }
      });
      if (isDone) {
        form.querySelectorAll(".initSelector").forEach(function (el) {
          if (!_module_selector__WEBPACK_IMPORTED_MODULE_0__.initSelectors.checkedValidation(el)) {
            isDone = false;
          }
        });
      }
      form.querySelector(".btn-ui-send").disabled = isDone;
    }
  }]);
  return InitForm;
}();

/***/ }),
/* 14 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initSelectors: function() { return /* binding */ initSelectors; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var initSelectors = /*#__PURE__*/function () {
  function initSelectors(element) {
    var _this = this;
    _classCallCheck(this, initSelectors);
    _defineProperty(this, "domSelectors", []);
    var data = {
      addInput: null,
      selector: null
    };
    if (element) {
      element.forEach(function (el) {
        data.addInput = el.getAttribute("data-validation");
        data.selector = el;
        el.querySelector(".btn_close").addEventListener("click", _this.handler__close_openMenu.bind(_this));
        el.querySelectorAll(".list li").forEach(function (el) {
          return el.addEventListener("click", _this.handler__changeTypeValidation.bind(_this));
        });
        document.getElementById(data.addInput).addEventListener("input", function (e) {
          return _this.handler__inputchack_type(e, el);
        });
      });
      this.domSelectors.push(data);
    }
  }
  _createClass(initSelectors, [{
    key: "handler__close_openMenu",
    value: function handler__close_openMenu(event) {
      var getMainContainer = event.target.closest(".initSelector");
      var list = getMainContainer.querySelector(".list");
      var btn = getMainContainer.querySelector(".btn_close");
      if (list) {
        var computedStyle = window.getComputedStyle(list);
        if (computedStyle.getPropertyValue("display") === "none") {
          //do open
          list.style.display = "block";
          btn.classList.add("active");
          getMainContainer.classList.add("active");
        } else {
          list.style.display = "none";
          btn.classList.remove("active");
          getMainContainer.classList.remove("active");
        }
      }
    }
  }, {
    key: "handler__changeTypeValidation",
    value: function handler__changeTypeValidation(e) {
      var target = e.target;
      var getMainContainer = e.target.closest(".initSelector");
      var getInputValidation = document.getElementById(getMainContainer.getAttribute("data-validation"));
      var btn = getMainContainer.querySelector(".btn_close");
      btn.click();
      setTimeout(function () {
        getInputValidation.value = "";
        if (target.tagName !== "LI") target = target.closest("li");
        var getData = target.getAttribute("data-type");
        //delete active

        getMainContainer.querySelectorAll(".list li").forEach(function (el) {
          return el.classList.remove("active");
        });
        getMainContainer.setAttribute("data-type", getData);
        //swap image
        var getImage = target.querySelector("img").getAttribute("src");
        getMainContainer.querySelector(".display img").setAttribute("src", getImage);
        target.classList.add("active");
        if (getData === "phone") {
          getInputValidation.setAttribute("placeholder", "+1 (000)-000-0000");
        } else {
          getInputValidation.setAttribute("placeholder", "example@example.com");
        }
      }, 10);
    }
  }, {
    key: "handler__inputchack_type",
    value: function handler__inputchack_type(e, el) {
      var target = e.target;
      var getType = el.getAttribute("data-type");
      if (getType === "phone") {
        this.validationByPhone(target);
      }
    }
  }, {
    key: "validationByPhone",
    value: function validationByPhone(target) {
      var value = target.value;
      var value_replace = value.replace(/[^0-9+]/g, '');
      if (value_replace.length > 12) {
        target.value = value.substr(0, value.length - 1);
        return;
      }
      if (value_replace.length === 1 && value_replace === "+") {
        value = "+";
      } else if (value_replace.length === 1 && value_replace === "1") {
        value = "+1";
      } else if (value_replace.length === 1 && value_replace !== "1") {
        value = "+1 (" + value_replace;
      } else if (value_replace.length > 3) {
        value = "";
        for (var i = 0; i < value_replace.length; i++) {
          if (i === 2) {
            value += " (";
          }
          if (i === 5) {
            value += ")-";
          }
          if (i === 8) {
            value += "-";
          }
          value += value_replace[i];
        }
      }

      //setup
      target.value = value;
    }
  }], [{
    key: "checkedValidation",
    value: function checkedValidation(selector) {
      var getType = selector.getAttribute("data-type");
      var getInput = document.getElementById(selector.getAttribute("data-validation"));
      if (getType === "phone") {
        var value = getInput.value;
        var value_replace = value.replace(/[^0-9+]/g, '');
        if (value_replace.length >= 12) {
          return true;
        }
      } else {
        var _value = getInput.value;
        return this.isValidEmail(_value);
      }
      return false;
    }
  }, {
    key: "isValidEmail",
    value: function isValidEmail(email) {
      // Создаем регулярное выражение для проверки email-адреса
      var emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;

      // Проверяем email с помощью регулярного выражения
      return emailRegex.test(email);
    }
  }]);
  return initSelectors;
}();

/***/ }),
/* 15 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BasicSelector: function() { return /* binding */ BasicSelector; }
/* harmony export */ });
/* harmony import */ var _CarLoaded__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16);
/* harmony import */ var _components_filters_FilterInventory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(17);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var BasicSelector = /*#__PURE__*/function () {
  function BasicSelector() {
    var _this = this;
    _classCallCheck(this, BasicSelector);
    document.querySelectorAll(".initSelectorBasic").forEach(function (el) {
      el.querySelector(".display").addEventListener("click", function (e) {
        return _this.handler__openCloseMenu(e);
      });
      el.querySelector(".list").addEventListener("click", function (e) {
        return _this.handler__selectElement(e);
      });
    });
    var sel = document.querySelectorAll(".initSelectorBasic");
    document.addEventListener("click", function (e) {
      sel.forEach(function (el) {
        var withinBoundaries = e.composedPath().includes(el);
        if (!withinBoundaries) {
          var list = el.querySelector(".list");
          var MainContainer = el;
          list.style.opacity = 0;
          MainContainer.querySelector(".button svg").classList.remove("active");
          setTimeout(function () {
            list.style.display = "none";
          }, 300);
        }
      });
    });
  }
  _createClass(BasicSelector, [{
    key: "handler__openCloseMenu",
    value: function handler__openCloseMenu(e) {
      var MainContainer = e.target.closest(".initSelectorBasic");
      var list = MainContainer.querySelector(".list");
      var getStyle = getComputedStyle(list);
      if (getStyle.getPropertyValue("display") === "none") {
        //doOpen
        list.style.display = "block";
        setTimeout(function () {
          list.style.opacity = 1;
          MainContainer.querySelector(".button svg").classList.add("active");
        }, 10);
      } else {
        //doClose
        list.style.opacity = 0;
        MainContainer.querySelector(".button svg").classList.remove("active");
        setTimeout(function () {
          list.style.display = "none";
        }, 300);
      }
    }
  }, {
    key: "handler__selectElement",
    value: function handler__selectElement(e) {
      var target = e.target;
      var mainContainer = target.closest(".initSelectorBasic");
      var list = mainContainer.querySelector(".list");
      if (target.classList.contains("active")) {
        mainContainer.querySelector(".display").click();
        return;
      }
      list.querySelectorAll("li").forEach(function (el) {
        el.classList.remove("active");
      });
      var getData = target.getAttribute("data-value");
      var getText = target.innerHTML;
      mainContainer.setAttribute("data-val", getData);
      target.classList.add("active");
      mainContainer.querySelector(".display").click();
      mainContainer.querySelector(".display p").innerHTML = getText;
      if (getData !== "ALL") {
        mainContainer.querySelector(".display p").classList.add("active");
      } else {
        mainContainer.querySelector(".display p").classList.remove("active");
      }
      clearTimeout(_components_filters_FilterInventory__WEBPACK_IMPORTED_MODULE_1__.FilterInventory.babelLoaderStatus);
      _components_filters_FilterInventory__WEBPACK_IMPORTED_MODULE_1__.FilterInventory.babelLoaderSetup();
    }
  }]);
  return BasicSelector;
}();

/***/ }),
/* 16 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CarLoaded: function() { return /* binding */ CarLoaded; }
/* harmony export */ });
/* harmony import */ var _validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var CarLoaded = /*#__PURE__*/function () {
  function CarLoaded() {
    _classCallCheck(this, CarLoaded);
    _defineProperty(this, "page", 0);
  }
  _createClass(CarLoaded, null, [{
    key: "getCars",
    value: function getCars() {
      var getContainer = document.querySelector("#car_container");
      var data = {
        page: this.page,
        filter: null
      };
      var responseData = this.doSendAjaxAndGetData(data);
      CarLoaded.appendToContainer(responseData);
      this.page++;
    }
  }, {
    key: "filterRestore",
    value: function filterRestore(data) {
      var getContainer = document.querySelector("#car_container");
      var dataForRequest = {
        action: "getCar",
        page: 0,
        filter: data
      };
      var responseData = CarLoaded.doSendAjaxAndGetData(data);
      CarLoaded.reloadingCars(responseData);
      this.page = 0;
    }
  }, {
    key: "doSendAjaxAndGetData",
    value: function doSendAjaxAndGetData(data) {
      //serverSendData

      //getResponseByJson
      //return fake data
      return {
        "isDone": true,
        "LoadedCard": [{
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Audi A3 2018",
          "Millage": "52000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "BMW X5 2020",
          "Millage": "34500 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Mercedes-Benz C-Class 2017",
          "Millage": "78900 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Toyota Camry 2019",
          "Millage": "42000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Honda Civic 2021",
          "Millage": "6500 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Audi A3 2015",
          "Millage": "95000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "BMW X5 2018",
          "Millage": "62000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Mercedes-Benz C-Class 2019",
          "Millage": "45000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Toyota Camry 2020",
          "Millage": "39000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Honda Civic 2017",
          "Millage": "72000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Audi A3 2019",
          "Millage": "38000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "BMW X5 2021",
          "Millage": "8900 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Mercedes-Benz C-Class 2016",
          "Millage": "96000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Toyota Camry 2017",
          "Millage": "78000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Honda Civic 2022",
          "Millage": "2400 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Audi A3 2016",
          "Millage": "89000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "BMW X5 2019",
          "Millage": "51000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Mercedes-Benz C-Class 2018",
          "Millage": "67000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Toyota Camry 2016",
          "Millage": "85000 miles",
          "link": "localhost:4000"
        }, {
          "img": "./success/resourse/resourse/car1.png",
          "Name": "Honda Civic 2020",
          "Millage": "12000 miles",
          "link": "localhost:4000"
        }]
      };
    }
  }, {
    key: "appendToContainer",
    value: function appendToContainer(data) {
      CarLoaded.appendCar(data);
    }
  }, {
    key: "reloadingCars",
    value: function reloadingCars(data) {
      CarLoaded.appendCar(data, true);
    }
  }, {
    key: "appendCar",
    value: function appendCar(data) {
      var isClear = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var GetContainer = document.getElementById("car_container");
      var getCarContainer = GetContainer.querySelector(".cars_wrapper");
      var loadingWrapper = GetContainer.querySelector(".loadingWrapper");
      var isDone = data.isDone;
      data = data.LoadedCard;
      //empty car
      getCarContainer.style.opacity = 0;
      setTimeout(function () {
        if (isClear) getCarContainer.innerHTML = "";
        data.forEach(function (el) {
          var tempContainer = document.createElement('div');
          tempContainer.classList.add("wrapper_car");
          tempContainer.innerHTML = "\n                    <div class=\"header\"><p>12 000$</p></div>\n                    <img src=\"".concat(el.img, "\" alt=\"car1\" />\n                    <h3>").concat(el.Name, "</h3>\n                    <p>mileage: ").concat(_validation__WEBPACK_IMPORTED_MODULE_0__.Validation.validationByNumbers(el.Millage, "mi").value, "</p>\n                    <div class=\"line\"></div>\n                    <button class=\"btn-ui-view_details\" data-link=\"").concat(el.link, "\" >view details</button>\n        ");
          getCarContainer.append(tempContainer);
        });
        getCarContainer.style.opacity = 1;
        loadingWrapper.style.opacity = 0;
        setTimeout(function () {
          return loadingWrapper.style.display = "none";
        }, 300);
        if (isDone) {
          document.querySelector(".moreLoadingBlock").disabled = true;
        } else {
          document.querySelector(".moreLoadingBlock").disabled = false;
        }
      }, 300);
    }
  }]);
  return CarLoaded;
}();

/***/ }),
/* 17 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FilterInventory: function() { return /* binding */ FilterInventory; }
/* harmony export */ });
/* harmony import */ var _module_validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(11);
/* harmony import */ var _module_objects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18);
/* harmony import */ var _module_CarLoaded__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16);
var _class;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



var FilterInventory = /*#__PURE__*/function () {
  function FilterInventory() {
    var _this = this;
    _classCallCheck(this, FilterInventory);
    var getContainer = document.querySelector("#filter_container");
    if (getContainer) {
      FilterInventory.MainContainer = getContainer;
      getContainer.querySelectorAll("input").forEach(function (el) {
        el.addEventListener("input", function (e) {
          return _this.handler_inputs(e);
        });
      });
      FilterInventory.buttonReset = getContainer.querySelector("#resetBTN");
      FilterInventory.buttonReset.addEventListener("click", function () {
        return _this.doCanelFilter();
      });
      document.querySelector(".moreLoadingBlock").addEventListener("click", function () {
        return _module_CarLoaded__WEBPACK_IMPORTED_MODULE_2__.CarLoaded.getCars();
      });
    }
  }
  _createClass(FilterInventory, [{
    key: "handler_inputs",
    value: function handler_inputs(e) {
      var getParent = e.target.closest(".cnt");
      var isBackspace = event.inputType === 'deleteContentBackward';
      var dataInput = {
        min: getParent.querySelector("input"),
        max: getParent.querySelectorAll("input")[1]
      };
      var target = e.target;
      var getExp = target.getAttribute("data-exp");
      var data_valid = e.target.getAttribute("data-valid");
      var getValidation = _module_validation__WEBPACK_IMPORTED_MODULE_0__.Validation.validationByNumbers(target.value, getExp, isBackspace);
      if (parseInt(getValidation.valueClear) > parseInt(dataInput.max.getAttribute('data-max'))) {
        getValidation = [dataInput.max.getAttribute('data-max'), getExp, isBackspace];
      } else {
        getValidation = [target.value, getExp, isBackspace];
      }
      target.value = FilterInventory.setUpValidation(data_valid, getValidation);
      FilterInventory.babelLoaderSetup();
    }
  }, {
    key: "doCanelFilter",
    value: function doCanelFilter() {
      var container = document.getElementById("filter_container");
      container.querySelectorAll(".main_filter .wrapper").forEach(function (el) {
        el.querySelector(".initSelectorBasic .list").classList.add("notToShow");
        el.querySelector(".initSelectorBasic").click();
        el.querySelector(".initSelectorBasic .list li").click();
      });
      container.querySelectorAll(".addContainer input").forEach(function (el) {
        el.value = "";
      });
    }
  }], [{
    key: "babelLoaderSetup",
    value: function babelLoaderSetup() {
      var _this2 = this;
      clearTimeout(FilterInventory.babelLoaderStatus);
      FilterInventory.babelLoaderStatus = setTimeout(function () {
        return _this2.babelLoaderFunc();
      }, 2000);
    }
  }, {
    key: "babelLoaderFunc",
    value: function babelLoaderFunc() {
      FilterInventory.checkAndChangeValue();
      var getContainer = FilterInventory.MainContainer;
      var data = {};
      getContainer.querySelectorAll(".main_filter .wrapper").forEach(function (el) {
        var basic = el.querySelector(".initSelectorBasic");
        var key = basic.getAttribute("data-type");
        var val = basic.getAttribute("data-val");
        data[key] = val;
      });
      getContainer.querySelectorAll(".cnt").forEach(function (el) {
        var getType = el.getAttribute("data-type");
        var Min = _module_validation__WEBPACK_IMPORTED_MODULE_0__.Validation.validationByNumbers(el.querySelector("input").value).valueClear;
        var Max = _module_validation__WEBPACK_IMPORTED_MODULE_0__.Validation.validationByNumbers(el.querySelectorAll("input")[1].value).valueClear;
        data[getType] = {
          min: Min,
          max: Max
        };
      });
      if (_module_objects__WEBPACK_IMPORTED_MODULE_1__.ObjectAddi.areEqual(data, FilterInventory.oldFilter)) return;
      FilterInventory.oldFilter = data;
      console.log(FilterInventory.buttonReset);
      FilterInventory.buttonReset.disabled = _module_objects__WEBPACK_IMPORTED_MODULE_1__.ObjectAddi.areEqual(FilterInventory.noneFilter, data) ? true : false;
      var getLoadingWrapper = document.querySelector("#car_container .loadingWrapper");
      getLoadingWrapper.style.display = "block";
      setTimeout(function () {
        return getLoadingWrapper.style.opacity = "1";
      }, 10);
      _module_CarLoaded__WEBPACK_IMPORTED_MODULE_2__.CarLoaded.filterRestore(data);
    }
  }, {
    key: "checkAndChangeValue",
    value: function checkAndChangeValue() {
      var getContainer = FilterInventory.MainContainer;
      getContainer.querySelectorAll(".cnt").forEach(function (parent) {
        var dataInput = {
          InputMin: parent.querySelector("input"),
          InputMax: parent.querySelectorAll("input")[1]
        };
        var data = {
          min: dataInput.InputMin.getAttribute("data-min"),
          max: dataInput.InputMax.getAttribute("data-max"),
          val_min: _module_validation__WEBPACK_IMPORTED_MODULE_0__.Validation.validationByNumbers(dataInput.InputMin.value).valueClear,
          val_max: _module_validation__WEBPACK_IMPORTED_MODULE_0__.Validation.validationByNumbers(dataInput.InputMax.value).valueClear,
          exp: dataInput.InputMin.getAttribute("data-exp"),
          isValid: dataInput.InputMin.getAttribute("data-valid")
        };
        if (data.val_min === "" && data.val_max === "") {
          return;
        }
        if (parseInt(data.val_min) < parseInt(data.min)) {
          dataInput.InputMin.value = FilterInventory.setUpValidation(data.isValid, [data.min, data.exp]);
          data.val_min = data.min;
        }
        if (data.val_max === "") {
          dataInput.InputMax.value = FilterInventory.setUpValidation(data.isValid, [data.max, data.exp]);
          data.val_max = data.max;
        } else if (data.val_max < parseInt(data.min)) {
          dataInput.InputMax.value = FilterInventory.setUpValidation(data.isValid, [data.min, data.exp]);
          data.val_max = data.min;
        }
        if (parseInt(data.val_min) > parseInt(data.val_max)) {
          var valMin = FilterInventory.setUpValidation(data.isValid, [data.val_max, data.exp]);
          var valMax = FilterInventory.setUpValidation(data.isValid, [data.val_min, data.exp]);
          dataInput.InputMin.value = valMin;
          dataInput.InputMax.value = valMax;
        }
      });
    }
  }, {
    key: "setUpValidation",
    value: function setUpValidation(isValid) {
      var add = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      if (isValid !== "non") {
        return _module_validation__WEBPACK_IMPORTED_MODULE_0__.Validation.validationByNumbers.apply(_module_validation__WEBPACK_IMPORTED_MODULE_0__.Validation, _toConsumableArray(add)).value;
      } else {
        return add[0].replace(/[^0-9]/g, '');
      }
    }
  }]);
  return FilterInventory;
}();
_class = FilterInventory;
_defineProperty(FilterInventory, "babelLoaderStatus", null);
_defineProperty(FilterInventory, "MainContainer", void 0);
_defineProperty(FilterInventory, "buttonReset", void 0);
_defineProperty(FilterInventory, "noneFilter", {
  make: "ALL",
  model: "ALL",
  body_type: "ALL",
  color: "ALL",
  price: {
    min: "",
    max: ""
  },
  millage: {
    min: "",
    max: ""
  },
  year: {
    min: "",
    max: ""
  }
});
_defineProperty(FilterInventory, "oldFilter", _objectSpread({}, _class.noneFilter));

/***/ }),
/* 18 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ObjectAddi: function() { return /* binding */ ObjectAddi; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }
function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
var ObjectAddi = /*#__PURE__*/function (_Object) {
  _inherits(ObjectAddi, _Object);
  var _super = _createSuper(ObjectAddi);
  function ObjectAddi() {
    _classCallCheck(this, ObjectAddi);
    return _super.apply(this, arguments);
  }
  _createClass(ObjectAddi, null, [{
    key: "areEqual",
    value: function areEqual(obj1, obj2) {
      // Сначала проверим, что оба объекта имеют одинаковое количество свойств
      var keys1 = Object.keys(obj1);
      var keys2 = Object.keys(obj2);
      if (keys1.length !== keys2.length) {
        return false;
      }

      // Затем проверим каждое свойство
      for (var _i = 0, _keys = keys1; _i < _keys.length; _i++) {
        var key = _keys[_i];
        var val1 = obj1[key];
        var val2 = obj2[key];
        if (_typeof(val1) === "object" && _typeof(val2) === "object") {
          // Если значение является объектом, рекурсивно вызываем функцию для сравнения
          if (!this.areEqual(val1, val2)) {
            return false;
          }
        } else if (val1 !== val2) {
          // Если значения не равны, объекты не одинаковы
          return false;
        }
      }

      // Если все свойства совпали, объекты считаются одинаковыми
      return true;
    }
  }]);
  return ObjectAddi;
}( /*#__PURE__*/_wrapNativeSuper(Object));

/***/ }),
/* 19 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SwitchFormPopup: function() { return /* binding */ SwitchFormPopup; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var SwitchFormPopup = /*#__PURE__*/function () {
  function SwitchFormPopup() {
    var _this = this;
    _classCallCheck(this, SwitchFormPopup);
    var target = document.querySelectorAll(".initPopupSwitcher");
    if (target) {
      target.forEach(function (el) {
        var getContainer = el.closest(".container_popup");
        getContainer.querySelectorAll(".buttons-switch button").forEach(function (el) {
          return el.addEventListener("click", function (e) {
            return _this.handler__switchBtn(e);
          });
        });
      });
    }
  }
  _createClass(SwitchFormPopup, [{
    key: "handler__switchBtn",
    value: function handler__switchBtn(e) {
      var getTarget = e.target;
      var getContainer = getTarget.closest(".container_popup");
      var getForms = getContainer.querySelector(".content");
      var getDataTo = getTarget.getAttribute("data-switch");
      if (getTarget.classList.contains("active")) return;

      //clear
      getForms.querySelectorAll(".list").forEach(function (el) {
        el.style.opacity = 0;
        setTimeout(function () {
          el.style.display = "none";

          //doActive
          getForms.querySelector(getDataTo).style.display = "block";
          setTimeout(function () {
            getForms.querySelector(getDataTo).style.opacity = 1;
          }, 10);
          getContainer.querySelectorAll(".buttons-switch button").forEach(function (el) {
            el.disabled = false;
            el.classList.remove("active");
          });
          getTarget.disabled = true;
          getTarget.classList.add("active");
        }, 300);
      });
    }
  }]);
  return SwitchFormPopup;
}();

/***/ }),
/* 20 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Sign_registration: function() { return /* binding */ Sign_registration; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Sign_registration = /*#__PURE__*/function () {
  function Sign_registration() {
    var _this = this;
    _classCallCheck(this, Sign_registration);
    _defineProperty(this, "alert", void 0);
    _defineProperty(this, "responseLine", void 0);
    if (!document.querySelector("main").classList.contains("sign_page")) return;
    this.alert = document.querySelector("#InformationResponse");
    this.responseLine = document.querySelector("#lineResponseForServer");
    document.querySelector("#RegistrationTryGetToken").addEventListener("click", function (e) {
      return _this.handller_registation(e);
    });
    document.querySelector("#loginTryGetToken").addEventListener("click", function (e) {
      return _this.handller_login(e);
    });
  }
  _createClass(Sign_registration, [{
    key: "handller_registation",
    value: function handller_registation(e) {}
  }, {
    key: "handller_login",
    value: function handller_login(e) {}
  }, {
    key: "actionOpenThenCloseAlert",
    value: function actionOpenThenCloseAlert(text) {
      var _this2 = this;
      if (!this.alert) return;
      this.alert.querySelector("p").innerText = text;
      this.alert.style.display = "block";
      this.alert.classList.add("actionOpen");
      setTimeout(function () {
        _this2.alert.style.display = "none";
      }, 5000);
    }
  }, {
    key: "changeResponseLineTo",
    value: function changeResponseLineTo(type) {
      var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      switch (type) {
        case "doWaiting":
          this.responseLine.classList.remove("error");
          this.responseLine.classList.add("waiting");
          break;
        case "doError":
          this.responseLine.classList.add("error");
          this.responseLine.classList.remove("waiting");
          this.actionOpenThenCloseAlert(text);
          break;
      }
    }
  }]);
  return Sign_registration;
}();

/***/ }),
/* 21 */
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MainMenuEvent: function() { return /* binding */ MainMenuEvent; }
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var MainMenuEvent = /*#__PURE__*/function () {
  function MainMenuEvent() {
    var _this = this;
    _classCallCheck(this, MainMenuEvent);
    document.querySelector(".navigation").querySelectorAll("li").forEach(function (element) {
      element.querySelector("a").addEventListener("mouseover", function (e) {
        if (element.className.includes("active")) return;
        _this.doHoverNavigation(element);
      });
    });
    document.querySelector(".navigation").querySelectorAll("li").forEach(function (element) {
      element.querySelector("a").addEventListener("mouseleave", function (e) {
        if (element.className.includes("active")) return;
        _this.removeHoverNavigation(element);
      });
    });
  }
  _createClass(MainMenuEvent, [{
    key: "doHoverNavigation",
    value: function doHoverNavigation(el) {
      var light_block = el.querySelector(".light");
      var light = el.querySelector(".light_decor");
      var text = el.querySelector("a");
      text.style.color = "#FFF";
      var stops = light.querySelectorAll(".gradient stop");
      stops[0].setAttribute('stop-color', 'white');
      stops[1].setAttribute('stop-color', 'white');
      light_block.classList.add("animation_navigations_hover");
      light.classList.add("animation_navigations_hover");
      light_block.classList.add("hoverActivate");
      text.classList.add("animation_navigations_hover");
    }
  }, {
    key: "removeHoverNavigation",
    value: function removeHoverNavigation(el) {
      var light_block = el.querySelector(".light");
      var light = el.querySelector(".light_decor");
      var text = el.querySelector("a");
      text.style.color = "#555";
      light_block.classList.remove("animation_navigations_hover");
      light.classList.remove("animation_navigations_hover");
      text.classList.remove("animation_navigations_hover");
      light_block.classList.remove("hoverActivate");
    }
  }]);
  return MainMenuEvent;
}();

/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
!function() {
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _components_initScripts_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _components_mainEvents_mainMenuEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21);


var pageId = document.querySelector("main").className;
var initWeb = new _components_initScripts_index__WEBPACK_IMPORTED_MODULE_0__.InitScripts(pageId);
new _components_mainEvents_mainMenuEvent__WEBPACK_IMPORTED_MODULE_1__.MainMenuEvent();
var callbaack = initWeb.init();

//global script
document.querySelectorAll("[data-popup]").forEach(function (el) {
  el.addEventListener("click", function (e) {
    return popupOpen(e);
  });
  document.querySelectorAll(".popup").forEach(function (el) {
    el.querySelector(".btn-ui-close").addEventListener("click", function (e) {
      return doClose(e);
    });
  });
});
function doClose(e) {
  var mainTarget = e.target.closest(".popup");
  mainTarget.style.opacity = 0;
  setTimeout(function () {
    mainTarget.style.display = "none";
    document.querySelector("html").style.overflowY = "auto";
  }, 300);
}
function popupOpen(e) {
  var getPopup = document.querySelector(e.target.getAttribute("data-popup"));
  getPopup.style.display = "block";
  setTimeout(function () {
    getPopup.style.opacity = "1";
    //freeze_html
    document.querySelector("html").style.overflowY = "hidden";
  }, 10);
}
window.addEventListener("load", function () {
  var getLoader = document.querySelector(".preloader");
  if (window.innerWidth <= 1400) {
    alert("sorry, but your screen width too small for view at this beta version site");
    return;
  }
  getLoader.style.opacity = 0;
  setTimeout(function () {
    getLoader.style.display = "none";
    document.getElementsByTagName("html")[0].style.overflowY = "auto";
    if (callbaack) {
      callbaack.doRestore();
    }
  }, 300);
});
}();
/******/ })()
;
//# sourceMappingURL=app.min.js.map